version: '3'
services:
  backend:
    build:
      context: flask-backend/
      dockerfile: Dockerfile
    ports:
      - "${FLASK_BACKEND_PORT}:${FLASK_BACKEND_PORT}"
    env_file:
      - .env
    volumes:
      - ./flask-backend:/app  # Mount the backend code
      - ./flask-backend/requirements.txt:/app/requirements.txt  # Mount the requirements.txt file
  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend

  postgres:
    image: postgres:13
    container_name: postgres
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 1s
      timeout: 5s
      retries: 10
    # volumes:
      # - ./postgres-data:/var/lib/postgresql/data
      # - ./scripts/init-user.sql:/docker-entrypoint-initdb.d/init-user.sql
    ports:
      - "${DB_PORT}:${DB_PORT}"
      
  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    env_file:
      - .env
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}
  